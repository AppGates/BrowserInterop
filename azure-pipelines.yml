trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Install SDK'
  inputs:
    version: 3.1.100	
# - task: Bash@3
#   displayName: 'CYpres Deps'
#   inputs:
#     targetType: inline
#     script : sudo apt-get -qq -y update && sudo apt-get -qq -y install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

- task: Bash@3 
  inputs: 	 
    targetType: inline	      
    script: npm install --save-dev start-server-and-test && npm run ci

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.9.2'     
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    packagesToPack: src/BrowserInterop/BrowserInterop.csproj
    versioningScheme: 'off'
    configuration: Release
- task: NuGetCommand@2
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Nuget'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), contains(variables['Build.SourceVersionMessage'], '#nuget'))

  
- task: PublishPipelineArtifact@1
  displayName: 'Publish Cypress videos'
  inputs:
    targetPath: test/BrowserInterop.E2ETests/cypress/videos/
    artifact: 'Cypress videos'
  condition: succeededOrFailed()
  
- task: PublishPipelineArtifact@1
  displayName: 'Publish Cypress screenshot'
  inputs:
    targetPath: test/BrowserInterop.E2ETests/cypress/screenshots/
    artifact: 'Cypress screenshot'
  condition: succeededOrFailed()
